1、JS 中的两种编程思想 ：同步和异步
	JS是单线程的，即同一个时间只能做一个事情。即同步编程，JS中大部分的程序都是同步进行的。即从上到下依次执行。
	
	但在某些情况下，JS中也会有异步编程的情况。在JS中，异步编程只有4中情况：定时器，所有的事件绑定，Ajax读取数据的时候，回调函数
	异步：规划要做10分钟后做一件事情，但不是立马去执行这件事情，需要等待一段时间，这样的话，我们不会等着它执行，而是继续执行下面的操作。若执行到一个事件时，刚好到10分钟那个时刻，则会等到这个事件执行完成之后，才会执行规划要做的那个事情

2、先看一个定时器的例子：
	window.setTimeout(function() {
		console.log('a');
	},0);
	console.log('b'); 
	输出结果: b a ;
可以看出，当定时器设置的等待时间为0时，并不是立刻执行，其实：每一个浏览器对于定时器的等待时间都有一个最小的值，谷歌：5~6ms ，IE：10~13ms ,如果设置的时间小于这个值，不起作用，还是需要等到最小时刻才会执行

3、由于定时器是异步执行的，所以定时器设置的时间不一定就是最后执行的时间
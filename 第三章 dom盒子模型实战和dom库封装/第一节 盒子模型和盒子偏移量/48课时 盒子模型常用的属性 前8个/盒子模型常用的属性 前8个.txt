1、JS盒子模型：指的是通过JS中提供的一系列的属性和方法，获取页面中元素的样式信息值。

2、className 和classList 属性
	className获取的是字符串形式的类名.
	classList获取的是列表形式的类名。
	classList更方便以后对类名的增删改查，通过classList.add()/remove() 等函数。
	
3、client 系列 (当前元素的私有属性) //获取到的值为整数，不带px。
	clientWidth / clientHeight : 内容的宽高 + padding
	clientLeft / clientTop :边框的宽高，和css属性(border[Left/Top]Width)一样
	
4、contentEditable属性
	div.contentEditable = true;则浏览器上当前元素的内容可编辑，即可在浏览器上编辑元素的内容
	
5、offset 系列	//获取到的值为整数，不带px。
	offsetWidth / offsetHeight : 内容宽高 + padding +border　．
	offsetParent : 当前元素的父级参照物
	offsetLeft / offsetTop : 当前元素的外边框距离父级参照物的内边框的偏移量
	
6、innerHTML innerText outerHTML outerText
	innerText 和 outerText 获取到的内容是一样的
	outerHTML 比 innerHTML 获取的内容多了元素本身的标签
	
7、scroll 系列	//获取到的值为整数，不带px。
	scrollWidth /scrollHeight : 和clientWidth /clientHeight 一样。(前提是容器中的内容没有溢出)。
		但是在有溢出的情况下，获取的结果如下规则：
			scrollWidth：真实内容的宽度 + 左右padding
			scrollHeight：真实的内容 + 上下padding
		但是前面获取的结果都是约等于的值，因为：同一个浏览器中，是否设置overflow = 'hidden'对最终的结果是有影响的。在不同的浏览器中获取到的结果也是不一样的，因为每个浏览器对margin padding line-height等的渲染是有差别的。
	scrollLeft / scrollTop ：滚动条卷去的宽度或高度
		当我们不希望溢出的内容隐藏，可以设置overflow="auto",这样在当前元素上就会出现滚动条。该属性可以获取滚动条卷去的长度
		
8、关于JS盒子模型的取值问题
	我们通过这13个属性获取的结果永远不可能出现小数，都是整数；浏览器在获取结果的时候，还在原来真实结果的基础上进行了四舍五入。
	
9、关于操作浏览器本身的盒子模型信息 	//获取到的值为整数，不带px。
	clientwidth /clientHeight 是浏览器可视窗口的宽度和高度
	scrollWidth / scrollHeight 当前页面的真实宽度和高度(但是是一个约等于的值)
	关于获取浏览器属性的函数封装
			function win(attr,value) {
				if (value == undefined) { 	//获取浏览器属性
					return document.documentElement[attr] || document.body[attr];
				}
				document.documentElement[attr] = value;
				document.body[attr] = value;
			}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
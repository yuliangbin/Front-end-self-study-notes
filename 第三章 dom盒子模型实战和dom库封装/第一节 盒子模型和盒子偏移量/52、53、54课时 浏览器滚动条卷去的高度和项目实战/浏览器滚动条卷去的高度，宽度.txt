==============课时52 浏览器滚动条卷去的高度=====================
1、之前我们学习的JS 盒子模型中：client系列 / offset系列 / scrollWidth/scrollHeight系列 都是只读属性，只能通过属性获取值，不能修改元素的样式

2、scrollTop / scrollLeft : 滚动条卷去的宽度/高度(这两个属性是唯一可读写的属性)

3、我们scrollTop 是存在边界值的，小于或超出都没有用，起到效果的依然是边界值
	最小值 : 0
	最大值 : 真实的高度 - 当前容器一屏幕的高度
	
4、a标签本身是跳转页面的，把跳转的地址写在href属性中。
	(1)不写值的话是刷新本页面
	(2)写的如果是#(#target),是锚点定位，定位到当前页面ID为target的元素位置
	(3)"javascript:;"这样写是取消a标签的默认跳转行为
	
=================53 课时 项目实战 回到顶部=======================
1、定时器
定时器有两种形式 setInterval(每隔指定时间执行一次) 和 setTimeOut(只执行一次)

2、设置的定时器是有返回值的，是一个数字，代表的是第几个定时器。 
	var timer = window.setTimerOut(function() {},1000);//timer = 1
	var timer = window.setTimerOut(function() {},1000);//timer = 2
	var timer = window.setInterval(function() {},1000);//timer = 3
	
3、window.clearTimeOut() 和 window.clearInterval() 都可以清除定时器，且没有类型区别，两种类型的定时器都能清除。

4、滚动条实现功能：开始时GO按钮不显示，只有当浏览器卷去的高度超过一屏幕的高度的时候再显示，反之隐藏。
	实现这个功能，有两种思路：
	(1)设置一个事件(定时器或其它事件),实现实时对卷去高度的监听，当卷去高度大于一屏幕时，就把display设置成block .
	(2)在浏览器滚动的时候判断GO的显示还是隐藏。刚好有一个监听滚动条的事件window.onscroll .
比较上述两个方法，显然第二个好于第一个，第一个需要永远处于监听状态，而第二个只需要在浏览器滚动时才处于监听状态

5、小作业
	针对回到顶部功能的扩展
		(1)实现京东左侧出现的楼层导航
		(2)刚开始没有导航楼层，只有当第一层出现在视野中时，再出现楼层导航
		(3)页面在某个区域时，楼层待会的对应项跟着选中
		(4)当点击楼层导航中的某一项，实现一个简单的动画定位到具体层

============= 课时54 跑马灯效果 =================================





























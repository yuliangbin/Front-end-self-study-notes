1、HTTP METHOD ：客户端向服务器端发送请求的方式
	以下的请求方式不管哪一种都可以向服务器传递数据，也可以从服务器获取到数据，而且从本质意义上来讲以下方式是没有任何区别的。例如：用POST做的事情，用GET也可以做，而我们接下来讲的区别都是目前开发约定俗成的规范
	
	GET：一般用于服务器获取数据，向服务器传递数据较少，从服务器接受数据的情况较多。项目中最常用的方式就是GET
		使用GET请求给服务器传递内容我们一般都使用"url问号传参的方式"
			xhr.open("get","/getList?num=12");
		GET请求具有以下的几个特点：
			GET 请求可被缓存
			GET 请求保留在浏览器历史记录中
			GET 请求可被收藏为书签
			GET 请求不应在处理敏感数据时使用
			GET 请求有长度限制
			GET 请求只应当用于取回数据
	POST：一般用于向服务器推送数据(给服务器的数据多，从服务器拿数据的情况较少)
		使用POST请求给服务器传递内容我们一般都使用"请求主体的方式"传递给服务器
			xhr.open("post","/getList");
			xhr.send('"name":"zhufeng","age":7');
			
	PUT：一般用于给服务器上增加资源文件，如我们的上传图片的功能
	DELETE：一般用于从服务器上删除资源文件
	HEAD：一般用于只获取服务器的响应头信息
	
2、GET PK POST
	大小问题：GET通过url传参给服务器的内容存在大小限制，而POST理论上没有限制
		原因：GET通过url传参给服务器，而每个浏览器对于url的长度存在限制，谷歌8kb，火狐7kb，IE2kb，如果url的长度超过限制，浏览器会把超出的部分截取
	缓存的问题：GET请求会出现缓存(这个缓存不一定是304)，POST是没有缓存的。
		在项目中我们的GET请求一般不会让其出现缓存。“清除缓存”：在url的末尾追加一个随机数
			xhr.open("get","/getList?num=12&_=" + Math.random());
	安全问题：
		一般来说GET不安全，而POST想对安全一些
	在以下情况中，请使用 POST 请求：
		- 无法使用缓存文件（更新服务器上的文件或数据库）
		- 向服务器发送大量数据（POST 没有数据量限制）
		- 发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠